{
  "workflow_status": "SUCCESS",
  "execution_time": 11.945298910140991,
  "data_processing": {
    "file_path": "/mnt/optimizer_share/input/SENSEX_test_dataset.xlsx",
    "file_size_mb": 5.169459342956543,
    "total_rows": 79,
    "total_strategies": 10764,
    "data_loading_time": 7.521429061889648,
    "data_processing_time": 1.3207833766937256,
    "total_data_time": 8.844093799591064,
    "bottleneck_analysis": "Data loading is the main bottleneck, not algorithms"
  },
  "optimization_results": {
    "execution_timestamp": "2025-07-26T20:57:12.467254",
    "total_execution_time": 0.2015681266784668,
    "algorithms_executed": 7,
    "algorithms_failed": 0,
    "success_rate": 100.0,
    "best_algorithm": "simulated_annealing",
    "best_fitness": 0.41445817178924094,
    "best_portfolio": [
      1156,
      7873,
      7411,
      6773,
      3438,
      3239,
      5568,
      6499,
      10473,
      5071,
      3933,
      3897,
      7025,
      10467,
      3850,
      1288,
      5522,
      6914,
      7870,
      5214,
      8396,
      10497,
      7273,
      7381,
      7143,
      5727,
      6904,
      10128,
      4906,
      3504,
      5228,
      9615,
      3534,
      10315,
      7919
    ],
    "individual_results": {
      "genetic_algorithm": {
        "best_fitness": 0.19078390576866966,
        "best_portfolio": [
          4639,
          9106,
          286,
          6600,
          8534,
          4583,
          6860,
          3258,
          7648,
          7772,
          1712,
          582,
          10482,
          3281,
          191,
          1804,
          4762,
          2891,
          4210,
          3379,
          5509,
          5831,
          9180,
          2207,
          57,
          10681,
          1687,
          9179,
          6447,
          3511,
          6657,
          8016,
          2012,
          9709,
          6085
        ],
        "generations": 100,
        "execution_time": 0.02291250228881836,
        "status": "success"
      },
      "particle_swarm_optimization": {
        "best_fitness": 0.18056320806194268,
        "best_portfolio": [
          9909,
          3905,
          5064,
          1823,
          970,
          4857,
          6329,
          10069,
          6203,
          5783,
          3586,
          7114,
          7103,
          3431,
          2434,
          10265,
          9493,
          32,
          9208,
          7494,
          10013,
          4426,
          7771,
          9846,
          1938,
          9916,
          10646,
          9938,
          8802,
          3580,
          3960,
          1477,
          7403,
          4251,
          2281
        ],
        "iterations": 75,
        "execution_time": 0.016214370727539062,
        "status": "success"
      },
      "simulated_annealing": {
        "best_fitness": 0.41445817178924094,
        "best_portfolio": [
          1156,
          7873,
          7411,
          6773,
          3438,
          3239,
          5568,
          6499,
          10473,
          5071,
          3933,
          3897,
          7025,
          10467,
          3850,
          1288,
          5522,
          6914,
          7870,
          5214,
          8396,
          10497,
          7273,
          7381,
          7143,
          5727,
          6904,
          10128,
          4906,
          3504,
          5228,
          9615,
          3534,
          10315,
          7919
        ],
        "iterations": 150,
        "execution_time": 0.012842178344726562,
        "status": "success"
      },
      "differential_evolution": {
        "best_fitness": 0.2647222298960201,
        "best_portfolio": [
          6711,
          5180,
          5514,
          10256,
          8376,
          5078,
          10345,
          3231,
          6621,
          6479,
          268,
          9553,
          6002,
          5379,
          6419,
          699,
          1655,
          3111,
          10323,
          6207,
          2742,
          5307,
          5691,
          5003,
          1876,
          9997,
          8999,
          1800,
          6301,
          4807,
          7599,
          451,
          9259,
          9618,
          5916
        ],
        "generations": 80,
        "execution_time": 0.01718616485595703,
        "status": "success"
      },
      "ant_colony_optimization": {
        "best_fitness": 0.17518498786508838,
        "best_portfolio": [
          2086,
          708,
          4112,
          694,
          7081,
          6649,
          4352,
          8423,
          4257,
          5794,
          7325,
          1003,
          1566,
          8857,
          4402,
          1637,
          2888,
          6554,
          264,
          4695,
          5780,
          6726,
          1959,
          5219,
          3382,
          500,
          9026,
          594,
          9004,
          288,
          1911,
          10744,
          2648,
          1859,
          8472
        ],
        "iterations": 60,
        "execution_time": 0.013038873672485352,
        "status": "success"
      },
      "bayesian_optimization": {
        "best_fitness": 0.25171511495994797,
        "best_portfolio": [
          20,
          6306,
          3999,
          18,
          5819,
          378,
          7456,
          1971,
          10025,
          5968,
          5277,
          1044,
          4171,
          5808,
          3612,
          5374,
          4765,
          3942,
          7518,
          9615,
          2984,
          10328,
          5458,
          2508,
          7691,
          4852,
          3878,
          4262,
          3701,
          5797,
          8528,
          9953,
          8165,
          10138,
          3261
        ],
        "iterations": 40,
        "execution_time": 0.008848190307617188,
        "status": "success"
      },
      "random_search": {
        "best_fitness": 0.23989633985401695,
        "best_portfolio": [
          8042,
          600,
          10234,
          10243,
          1222,
          1130,
          5350,
          4059,
          1990,
          3847,
          7762,
          8853,
          4385,
          9527,
          9371,
          10173,
          6600,
          2221,
          7144,
          7109,
          2996,
          9978,
          3656,
          10375,
          511,
          9244,
          8986,
          2772,
          3897,
          1085,
          10227,
          9772,
          7731,
          4551,
          10729
        ],
        "iterations": 500,
        "execution_time": 0.11013293266296387,
        "status": "success"
      }
    },
    "execution_method": "sequential",
    "performance_note": "Sequential execution chosen for optimal performance with fast algorithms"
  },
  "output_files": {
    "equity_curves": "/mnt/optimizer_share/output/equity_curves_20250726_205712.png",
    "performance_report": "/mnt/optimizer_share/output/performance_report_20250726_205712.txt",
    "portfolio_composition": "/mnt/optimizer_share/output/portfolio_composition_20250726_205712.csv",
    "algorithm_comparison": "/mnt/optimizer_share/output/algorithm_comparison_20250726_205712.png",
    "excel_summary": "/mnt/optimizer_share/output/optimization_summary_20250726_205712.xlsx",
    "execution_summary": "/mnt/optimizer_share/output/execution_summary_20250726_205712.json"
  },
  "performance_metrics": {
    "data_processing_time": 8.844093799591064,
    "algorithm_execution_time": 0.2015681266784668,
    "data_vs_algorithm_ratio": 43.876449840201175,
    "main_bottleneck": "Data processing",
    "optimization_opportunity": "Focus on data loading optimization for best performance gains",
    "algorithm_performance": "Already very fast (milliseconds per algorithm)",
    "real_value": "Algorithm variety and comprehensive output generation"
  },
  "honest_assessment": {
    "primary_benefits": [
      "7 different optimization algorithms",
      "Automated best result selection",
      "Professional output generation (6 file types)",
      "Complete workflow automation",
      "A100 GPU acceleration for individual algorithms"
    ],
    "performance_reality": "Sequential execution is faster than parallel for these tasks",
    "main_bottleneck": "Data loading and processing (not algorithm execution)",
    "real_value_proposition": "Comprehensive optimization suite with professional outputs"
  }
}